[build-system]
requires = ["hatchling>=1.25.0"]
build-backend = "hatchling.build"

[project]
name = "ml-playground"
version = "0.0.0"
description = "A minimal GPT training repo (uv-integrated)"
readme = "README.md"
authors = [
  { name = "Andrej Karpathy" },
]
license = { file = "LICENSE" }
requires-python = ">=3.13,<3.14"
dependencies = [
  "numpy>=2",
  "requests>=2.32",
  "tiktoken>=0.7",
  "tqdm>=4.66",
  "datasets>=2.20",
  "transformers>=4.44",
  "peft>=0.12",
  "beautifulsoup4>=4.12",
  "torch>=2.4",
  "pip==25.2",
  "tensorboard>=2.20.0",
  "torch-tb-profiler>=0.4.3",
  "pydantic>=2",
  "notebook>=7.4.5",
]

[project.optional-dependencies]
notebooks = [
  "matplotlib>=3.7",
  "pandas>=1.5",
  "jupyter>=1.0",
]


[tool.uv]
package = true
# Lockfile will be auto-generated by `uv lock` or `uv sync`

[tool.uv.sources]
# allow system-specific torch wheels to be resolved from PyPI

[tool.hatch.build.targets.wheel]
packages = ["ml_playground"]


[dependency-groups]
# Mandatory dev tooling available in the project venv
# Sync with: uv sync --all-groups (required for development)
dev = [
  "pytest>=8",
  "pytest-xdist>=3",
  "pytest-cov>=6",
  "pytest-mock>=3",
  "coverage[toml]>=7",
  "ruff>=0.6",
  "mypy>=1.11",
  "pyright>=1.1.380",
  "types-requests>=2.32",
]


[tool.ruff]
respect-gitignore = true
extend-exclude = [
  ".idea",
  ".vscode",
  "out",
  "**/out/**",
  "data",
  "**/datasets/**",
  ".venv",
  "env",
  ".pytest_cache",
  ".mypy_cache",
  ".ruff_cache",
  ".git",
  "htmlcov",
]

[tool.mypy]
# When invoked without explicit targets, analyze only the project code.
files = ["ml_playground"]
# Also exclude common ignored/artifact directories if mypy is invoked without args.
exclude = '(^|.*/)(out/|data/|datasets/|htmlcov/|\.idea/|\.vscode/|\.venv/|env/|\.pytest_cache/|\.mypy_cache/|\.ruff_cache/|\.git/)'


[tool.pytest.ini_options]
# Updated pytest settings for ml_playground
addopts = "-n auto -W error --strict-markers --strict-config -v"
testpaths = [
  "tests",
]
norecursedirs = [
  ".git",
  ".idea",
  ".vscode",
  ".venv",
  "env",
  "out",
  "data",
  "htmlcov",
  ".pytest_cache",
  ".mypy_cache",
  ".ruff_cache",
]
markers = [
  "slow: marks tests as slow (deselected by default)",
  "integration: marks tests as integration tests",
  "perf: marks tests as performance tests (deselected by default)",
]

[tool.coverage.run]
source = ["ml_playground"]
branch = true
parallel = true
omit = [
  "tests/*",
  "*/conftest.py",
]

[tool.coverage.report]
# ULTRA-STRICT: 100% coverage required, no exceptions
exclude_lines = [
  # Only allow exclusion for truly impossible-to-test code
  "if 0:",
  "if __name__ == .__main__.:",
]
show_missing = true
skip_covered = false
# STRICT REQUIREMENT: 100% coverage, no compromises
fail_under = 100
precision = 2

[tool.coverage.html]
directory = "htmlcov"

[tool.pyright]
include = ["ml_playground"]
exclude = [
  ".git",
  ".idea",
  ".vscode",
  "out",
  "**/out/**",
  "data",
  "**/datasets/**",
  ".venv",
  ".mypy_cache",
  ".ruff_cache",
  "htmlcov",
]
